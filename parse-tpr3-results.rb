#!/usr/bin/env ruby
#
# Copyright Â© 2014 Siarhei Siamashka <siarhei.siamashka@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

if not ARGV[0] or not File.directory?(ARGV[0]) then
    printf("Usage: #{$PROGRAM_NAME} [results_directory] > report.html\n")
    printf("\n")
    printf("Where:\n")
    printf("    results_directory - is the directory populated by\n")
    printf("                        the scan-for-best-tpr3.rb script\n")
    printf("    report.html       - is the output of this script\n")
    exit(1)
end

def subtest_dir_to_html_table(dir)

    mfxdly_list   = [0x07, 0x06, 0x05, 0x04, 0x03, 0x02, 0x01, 0x00,
                     0x08, 0x10, 0x18, 0x20, 0x28, 0x30, 0x38]
    sdphase_list  = [0x3, 0x2, 0x1, 0x0, 0xe, 0xd, 0xc]
    sdphase_label = [90, 72, 54, 36, 108, 90, 72, 54, 126,
                     108, 90, 72, 144, 126, 108, 90]

    def read_file(dir, name)
        fullname = File.join(dir, name)
        return if not File.exists?(fullname)
        fh = File.open(fullname)
        data = fh.read
        fh.close
        return data
    end

    def lookup_tpr3(dir, tpr3)
        filename = File.join(dir, sprintf("tpr3_0x%08X", tpr3))
        return "<td>" if not File.exists?(filename)
        fh = File.open(filename)
        data = fh.read
        fh.close

        color = "#FF0000"
        if data =~ /memtester success rate: (\d+)\/(\d+)/ then
            passed_tests = $1.to_i
            total_tests = $1.to_i
            if passed_tests == 5 then
                color = "green"
            else
                green_part = 127 + passed_tests * 128 / 4
                blue_part  = total_tests * 128 / 4
                color = sprintf("#FF%02X%02X", green_part, blue_part)
            end
        end

        return sprintf("<td bgcolor=%s title='%s'>0x%06X", color, data, tpr3)
    end

    printf("<table border=1 style='border-collapse: collapse;")
    printf(" empty-cells: show; font-family: arial; font-size: small;")
    printf(" white-space: nowrap; background: #F0F0F0;'>\n")
    printf("<caption><b>%s (reliability for different dram_tpr3 settings)</b></caption>\n", (read_file(dir, "_description.txt") or
                                       "Unknown device"))
    printf("<tr><td rowspan='#{mfxdly_list.size + 1}'>%s<th>MFxDLY \\ SDPHASE",
           read_file(dir, "_a10_meminfo.txt").gsub("\n", "<br>"))
    sdphase_list.each {|sdphase|
        printf("<th>%d", sdphase_label[sdphase])
    }
    mfxdly_list.each {|mfxdly|
        printf("<tr><th><b>%3X</b>", mfxdly)
        sdphase_list.each {|sdphase|
            printf("%s", lookup_tpr3(dir, (mfxdly << 16) | (sdphase * 0x1111)))
        }
    }
    printf("</table>\n")
end

print "
<p>
This is a DRAM stability report for various <a href='http://linux-sunxi.org'>Allwinner A10/A13/A20 hardware</a>
has been generated by the tools from <a href='https://github.com/ssvb/a10-meminfo'>
https://github.com/ssvb/a10-meminfo</a>. We primarily focus on finding an optimal
<b>dram_tpr3</b> value to be used in the <a href='http://linux-sunxi.org/U-boot'>u-boot-sunxi</a>
bootloader
(<a href='https://github.com/linux-sunxi/u-boot-sunxi/blob/87ca6dc0262d18b7/board/sunxi/dram_cubietruck.c#L20'>this
is where it is configured for the Cubietruck board</a>). The dram_tpr3 parameter is just a hexadecimal
number with the following bit fields:
<ul>
<li>bits [22:20] - MFWDLY of the command lane
<li>bits [18:16] - MFBDLY of the command lane
<li>bits [15:12] - SDPHASE of the byte lane 3
<li>bits  [11:8] - SDPHASE of the byte lane 2
<li>bits   [7:4] - SDPHASE of the byte lane 1
<li>bits   [3:0] - SDPHASE of the byte lane 0
</ul>

See the <a href='https://github.com/OLIMEX/OLINUXINO/blob/master/HARDWARE/RK3066-PDFs/Rockchip%20RK30xx%20TRM%20V2.0.pdf'>RK30XX manual</a>
for more details about MFWDLY/MFBDLY/SDPHASE, because they are apparently using the same DRAM controller as Allwinner A10/A13/A20.</p>
<p>
Results interpretation (some results are a mix of RED and YELLOW):
<ul>
<li>RED - the hardware locks up relatively quickly.
<li>YELLOW - may run a little longer, but still deadlocks or suffers from data corruption.
<li>GREEN - no problems detected during roughly <b>~5 minutes</b> of <a href='https://github.com/ssvb/lima-memtester/'>lima-memtester</a> run.
</ul>
</p>
"

dirlist = []
Dir.glob(File.join(ARGV[0], "*")).each {|f|
    next if not File.directory?(f)
    dirlist.push(f)
}

# Combine the results from the same device/configuration
tmp = {}
dirlist.sort.each {|f|
    if File.basename(f) =~ /(\d+MHz\-[0-9A-F]{8})/ then
        tmp[$1] = [] if not tmp.has_key?($1)
        tmp[$1].push(f)
    end
}
dirlist = []
tmp.to_a.sort {|x,y| x[0] <=> y[0] }.each {|x| dirlist.push(x[1]) }

dirlist.each {|a|
    printf("<table cellspacing=10><tr>\n")
    a.each {|f|
        printf("<td>")
        subtest_dir_to_html_table(f)
    }
    printf("</table>")
    printf("</p>\n")
}

print "
<p>
Notes:
<ul>
<li>The default settings (dram_tpr3=0x0) are exactly in the center cells
of the tables. They tend to be not the best.
<li>Having some dram_tpr3 setting marked as GREEN does not mean that
this particular setup is really stable. More like it is just a good
candidate for more thorough testing. It is recommended to run
lima-memtester for at least <b>8-10 hours</b> before deciding that
this configuration is really usable.
<li>Even after identifying the highest dram clock speed where lima-memtester
can't detect any problems during a long run, it is still a good idea to
reduce the dram clock speed by 24MHz from that point (in order to have
some extra safety margin).
</ul>
</p>
"
